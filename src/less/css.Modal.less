@import "utilities/scroll";
// dynamic dialog

// static dialog
.modal-overlay {
    display: none;
    position: fixed;
    inset: 0;
    z-index: @modal-zindex - 10;
    background-color: @modal-bg;
}


.modal {
    position: fixed;
    inset: 0;
    z-index: @modal-zindex;
    overflow: hidden;
    outline: 0;
}

.modal-dialog {
    position: relative;
    width: auto;
    // for mobile view to have enough padding
    margin: @modal-margin; // allow clicks to pass through for custom click handling to close modal
    pointer-events: none; // TODO: some sort of animation
    // WATCH:
    display: flex;
}

.modal-content {
    position: relative;
    display: flex;
    flex-direction: column;
    width: 100%;
    // make this dynamic for mobile browsers
    max-height: calc(100vh - @modal-margin * 2);
    pointer-events: auto;
    background-color: @white;
    background-clip: padding-box; 
    box-shadow: @shadows[deeper]; // Remove focus outline from opened modal
    outline: 0;
    // add border radius here optionally
}

.animate {
    &.fromleft .modal-content {
        transform: translateX(-100%);
        animation: fromleft .15s @trans-func 0.15s;
        animation-fill-mode: forwards;

    }

    &.fromright .modal-content {
        transform: translateX(100%);
        animation: fromright .15s @trans-func 0.15s;
        animation-fill-mode: forwards;
    }

    &.fromtop .modal-content {
        transform: translateY(-100%);
        animation: fromtop .15s @trans-func 0.15s;
        animation-fill-mode: forwards;
    }

    &.frombottom .modal-content {
        transform: translateY(100%);
        animation: frombottom .15s @trans-func 0.15s;
        animation-fill-mode: forwards;
    }
}

.modal-header {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;

    // WATCH:
    align-items: center;

    padding: @modal-padding;

}

// .modal-title {
//    nothing specific
// }
.modal-close {

    &:before {
        content: "x";
    }
}

.modal-body {
    position: relative;
    flex: 1 1 auto;
    padding: @modal-padding;

    overflow: auto;
    .scroll(@modal-scrollbar-width);
}

.modal-footer {
    // item adjustment should be in html
    padding: @modal-padding;
}


// now that the overlay wraps the content, i can redefine these better
.modal-center {
    .modal-dialog {

        align-items: center;
        height: calc(100vh - @modal-margin * 2);
        // height: 100vh;
    }
}

.modal-bottom-sheet {
    .modal-dialog {
        align-items: flex-end;
        height: 100vh;
    }
}

.modal-full-height {
    .modal-content {
        height: calc(100vh - @modal-margin * 2);
        // height: 100vh;
    }
}

.modal-full-screen {
    .modal-dialog {
        margin: 0;
        max-width: 100vw;
    }

    .modal-content {
        max-height: 100vh;
        min-height: 100vh;
    }
}

.modal-half-screen {
    .modal-dialog {
        margin: 0;
        max-width: 90vw;
    }

    .modal-content {
        max-height: 100vh;
        min-height: 100vh;
    }
}

.reverse {
    .modal-dialog {
        margin-inline-start: auto;
    }

}

// media
.media(md, {
        .modal-dialog {
            margin-inline-start: auto;
            margin-inline-end: auto;
            max-width: @modal-md-width;
        }

        .modal-half-screen .modal-dialog {
            max-width: 50vw;
        }

    }

);


// different basic animations 
/* RTL BEGIN */
@keyframes fromleft {
    from {
        transform: translateX(-100%);
    }

    to {
        transform: translateX(0);
    }
}

@keyframes fromright {
    from {
        transform: translateX(100%);
    }

    to {
        transform: translateX(0);
    }
}

/* RTL END */

@keyframes frombottom {
    from {
        transform: translateY(100%);
    }

    to {
        transform: translateY(0);
    }
}

@keyframes fromtop {
    from {
        transform: translateY(-100%);
    }

    to {
        transform: translateY(0);
    }
}